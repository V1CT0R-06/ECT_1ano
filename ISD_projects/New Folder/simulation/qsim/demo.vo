// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 22.1std.2 Build 922 07/20/2023 SC Lite Edition"

// DATE "12/17/2024 22:19:59"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module demo (
	Y,
	CLK,
	X);
output 	Y;
input 	CLK;
input 	X;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y~output_o ;
wire \CLK~input_o ;
wire \X~input_o ;
wire \inst7~0_combout ;
wire \inst5~q ;
wire \inst3~combout ;
wire \inst6~q ;
wire \inst8~0_combout ;


cycloneive_io_obuf \Y~output (
	.i(\inst8~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y~output_o ),
	.obar());
// synopsys translate_off
defparam \Y~output .bus_hold = "false";
defparam \Y~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \X~input (
	.i(X),
	.ibar(gnd),
	.o(\X~input_o ));
// synopsys translate_off
defparam \X~input .bus_hold = "false";
defparam \X~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst7~0 (
// Equation(s):
// \inst7~0_combout  = (\X~input_o  & ((\inst6~q ) # (\inst5~q )))

	.dataa(\X~input_o ),
	.datab(\inst6~q ),
	.datac(\inst5~q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst7~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst7~0 .lut_mask = 16'hA8A8;
defparam \inst7~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas inst5(
	.clk(\CLK~input_o ),
	.d(\inst7~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst5~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst5.is_wysiwyg = "true";
defparam inst5.power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb inst3(
// Equation(s):
// \inst3~combout  = (\X~input_o  & !\inst5~q )

	.dataa(\X~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\inst5~q ),
	.cin(gnd),
	.combout(\inst3~combout ),
	.cout());
// synopsys translate_off
defparam inst3.lut_mask = 16'h00AA;
defparam inst3.sum_lutc_input = "datac";
// synopsys translate_on

dffeas inst6(
	.clk(\CLK~input_o ),
	.d(\inst3~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst6~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst6.is_wysiwyg = "true";
defparam inst6.power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \inst8~0 (
// Equation(s):
// \inst8~0_combout  = (!\X~input_o  & ((\inst6~q ) # (\inst5~q )))

	.dataa(\inst6~q ),
	.datab(\inst5~q ),
	.datac(gnd),
	.datad(\X~input_o ),
	.cin(gnd),
	.combout(\inst8~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst8~0 .lut_mask = 16'h00EE;
defparam \inst8~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign Y = \Y~output_o ;

endmodule
