// Copyright (C) 2024  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 23.1std.1 Build 993 05/14/2024 SC Lite Edition"

// DATE "11/02/2024 14:37:37"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module DecoderDemo3 (
	Y16,
	B,
	A,
	D,
	C,
	E_1,
	E_0);
output 	Y16;
input 	B;
input 	A;
input 	D;
input 	C;
input 	E_1;
input 	E_0;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \B~input_o ;
wire \Y16~output_o ;
wire \E_1~input_o ;
wire \C~input_o ;
wire \D~input_o ;
wire \A~input_o ;
wire \inst8~0_combout ;
wire \E_0~input_o ;
wire \inst8~1_combout ;


cycloneive_io_obuf \Y16~output (
	.i(\inst8~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y16~output_o ),
	.obar());
// synopsys translate_off
defparam \Y16~output .bus_hold = "false";
defparam \Y16~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \E_1~input (
	.i(E_1),
	.ibar(gnd),
	.o(\E_1~input_o ));
// synopsys translate_off
defparam \E_1~input .bus_hold = "false";
defparam \E_1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \C~input (
	.i(C),
	.ibar(gnd),
	.o(\C~input_o ));
// synopsys translate_off
defparam \C~input .bus_hold = "false";
defparam \C~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \D~input (
	.i(D),
	.ibar(gnd),
	.o(\D~input_o ));
// synopsys translate_off
defparam \D~input .bus_hold = "false";
defparam \D~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst8~0 (
// Equation(s):
// \inst8~0_combout  = (\E_1~input_o  & ((\C~input_o ) # ((\D~input_o  & !\A~input_o ))))

	.dataa(\E_1~input_o ),
	.datab(\C~input_o ),
	.datac(\D~input_o ),
	.datad(\A~input_o ),
	.cin(gnd),
	.combout(\inst8~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst8~0 .lut_mask = 16'h88A8;
defparam \inst8~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \E_0~input (
	.i(E_0),
	.ibar(gnd),
	.o(\E_0~input_o ));
// synopsys translate_off
defparam \E_0~input .bus_hold = "false";
defparam \E_0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst8~1 (
// Equation(s):
// \inst8~1_combout  = (\inst8~0_combout  & !\E_0~input_o )

	.dataa(\inst8~0_combout ),
	.datab(gnd),
	.datac(gnd),
	.datad(\E_0~input_o ),
	.cin(gnd),
	.combout(\inst8~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst8~1 .lut_mask = 16'h00AA;
defparam \inst8~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

assign Y16 = \Y16~output_o ;

endmodule
